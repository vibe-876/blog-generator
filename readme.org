#+title: Blog Generator
#+author: Camilla A.


Just a simple translator, a markup language called camarkup to HTML.
I'm writing this specifically for usage on my own website's blog -- I can't promise It'll work for you, but feel free to use/fork it if you think it will :3 .

Now you may be saying "why are you making this, HTML is easy to write, and you use GNU Emacs with Org Mode anyway, which can be translated to HTML!".
However, I feel like Org's main strength is that it's just *plain text* -- yes it is beautiful, and extremely efficient because of this, but it can make translation into a more structured language like HTML a bit weird.
I also have very strong feelings about how I want it to look, and with some CSS things I want, and some skimming of Org's and Pandoc's docs, I felt this would be a bit easier.
And most importantly by a while, I <3 programming in Clojure, and if I can find an excuse to, I will.

* Camarkup Spec
The spec for camarkup is [[file:doc/markup.org][here]].

* Building and Usage
You'll need:
- [[https://leiningen.org/][Leiningen]]
- The JVM (to run the uberjar)

Then, it's as simple as cloning the directory, and running ~lein uberjar~ to get an uberjar.
The uberjar takes three arguments (in this order): the camarkup file, the output file, and the header file.
The header file is a HTML file that'll be read, and inserted into the head section of the output file, that is, if the contents of the header file is ~x~, then the output will have ~<head>x</head>~.
I use it to add a title tag, and a css file -- you can use it for /whatever/ you so desire.

There is also, an optional final file, which does the same thing as the header file, but it put at the top of the body instead.
This is meant to be used for things like topbars, so that the blog can look consistent with the rest of the website.

** Example Usage:
~java -jar blog-generator-0.1.0-SNAPSHOT-standalone.jar blog.markup blog-post.html header.html~

There's a GNU Emacs mode for camarkup, [[file:camarkup-mode.el][just here]].
Documentation for it is found [[file:doc/camarkup-mode.org][here]].
It's not finished yet, that'll be in the 0.2 release
